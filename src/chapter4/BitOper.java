package chapter4;
// 为运算
public class BitOper {
    public static void main(String[] args){
        // 2 的原码 00000000 00000000 00000000 00000010
        // 2 的补码 00000000 00000000 00000000 00000010
        // 3 的原码 00000000 00000000 00000000 00000011
        // 3 的补码 00000000 00000000 00000000 00000011
        // 按位与：
        // 00000000 00000000 00000000 00000010
        // 00000000 00000000 00000000 00000011
        // 结果(补码)
        // 00000000 00000000 00000000 00000010
        // 正数三码合一，原码和补码一样
        System.out.println(2&3);
        // -2 的原码 10000000 00000000 00000000 00000010
        // -2 的补码 先得到反码：
                 // 11111111 11111111 11111111 11111101
        // 补码   // 11111111 11111111 11111111 11111110
        // 取反   // 00000000 00000000 00000000 00000001  （补码,正数，三码合一）
        // 1
        System.out.println(~-2);
        //  2 的补码 00000000 00000000 00000000 00000010
        //       ~2 11111111 11111111 11111111 11111101 (补码)
        //       ~2 11111111 11111111 11111111 11111100 (反码)
        //       ~2 10000000 00000000 00000000 00000011 (反码)
        System.out.println(~2); // -3

        int a = 1 >> 2; // 00000001 -> 00000000 本质是 1/2/2 = 0
        int c = 1 << 2; // 00000001 -> 00000100 本质 是 1*2*2 = 4
        System.out.println(a);
        System.out.println(c);

    }
}
